{"version":3,"file":"author-icon.min.js","sources":["../src/element.js"],"sourcesContent":["class AuthorIconElement extends AuthorBaseElement(HTMLElement) {\n  constructor () {\n    super(`{{TEMPLATE-STRING}}`)\n\n    this.xhr = new XMLHttpRequest()\n    this.cache = caches.open('author-icons')\n\n    this.UTIL.defineAttributes({\n      src: {\n        default: null\n      }\n    })\n\n    this.UTIL.definePrivateMethods({\n      inject: code => this.innerHTML = code,\n\n      render: async () => {\n        if (!this.src) {\n          return this.PRIVATE.inject(`<svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            <title>Placeholder Icon</title>\n            <desc>Copyright ${new Date().getFullYear()} Author.io</desc>\n            <g>\n              <mask id=\"mask-2\" fill=\"white\">\n                <path d=\"M0,0 L4.8,0 L4.8,24 L0,24 L0,0 Z M7.68,0 L10.56,0 L10.56,24 L7.68,24 L7.68,0 Z M13.44,0 L16.32,0 L16.32,24 L13.44,24 L13.44,0 Z M19.2,0 L24,0 L24,24 L19.2,24 L19.2,0 Z\"></path>\n              </mask>\n              <g mask=\"url(#mask-2)\">\n                <mask id=\"mask-4\" fill=\"white\">\n                  <path d=\"M0,0 L24,0 L24,4.8 L0,4.8 L0,0 Z M0,19.2 L24,19.2 L24,24 L0,24 L0,19.2 Z M0,13.44 L24,13.44 L24,16.32 L0,16.32 L0,13.44 Z M0,7.68 L24,7.68 L24,10.56 L0,10.56 L0,7.68 Z\"></path>\n                </mask>\n                <path d=\"M3.84,0 L20.16,0 C22.2807734,-3.89579761e-16 24,1.71922656 24,3.84 L24,20.16 C24,22.2807734 22.2807734,24 20.16,24 L3.84,24 C1.71922656,24 2.5971984e-16,22.2807734 0,20.16 L0,3.84 C-2.5971984e-16,1.71922656 1.71922656,3.89579761e-16 3.84,0 Z M3.84,1.92 C2.77961328,1.92 1.92,2.77961328 1.92,3.84 L1.92,20.16 C1.92,21.2203867 2.77961328,22.08 3.84,22.08 L20.16,22.08 C21.2203867,22.08 22.08,21.2203867 22.08,20.16 L22.08,3.84 C22.08,2.77961328 21.2203867,1.92 20.16,1.92 L3.84,1.92 Z\" fill=\"#545454\" mask=\"url(#mask-4)\"></path>\n              </g>\n            </g>\n          </svg>`)\n        }\n\n        let cache = await this.cache\n        let cachedRequest = await cache.match(this.src)\n\n        if (!cachedRequest) {\n          this.xhr.open('GET', this.src)\n          return this.xhr.send()\n        }\n\n        let reader = cachedRequest.body.getReader()\n        reader.read().then(({ value }) => this.PRIVATE.inject(new TextDecoder('utf-8').decode(value)))\n      }\n    })\n\n    this.UTIL.registerListener(this.xhr, 'load', async evt => {\n      let { responseText, status, statusText } = this.xhr\n\n      if (status !== 200) {\n        return\n      }\n\n      let cache = await this.cache\n\n      cache.match(this.src).then(async matched => {\n        if (!matched) {\n          await cache.put(this.src, new Response(responseText, {\n            headers: { 'Content-Type': 'image/svg+xml' }\n          }))\n        }\n\n        this.PRIVATE.inject(responseText)\n      })\n    })\n\n    this.UTIL.registerListeners(this, {\n      'attribute.change': evt => {\n        let { attribute, oldValue, newValue } = evt.detail\n\n        if (newValue === oldValue) {\n          return\n        }\n\n        switch (attribute) {\n          case 'src': return this.PRIVATE.render()\n        }\n      }\n    })\n  }\n\n  static get observedAttributes () {\n    return ['src']\n  }\n}\n\ncustomElements.define('author-icon', AuthorIconElement)\n\nexport default AuthorIconElement\n"],"names":["AuthorIconElement","AuthorBaseElement","HTMLElement","[object Object]","super","this","xhr","XMLHttpRequest","cache","caches","open","UTIL","defineAttributes","src","default","definePrivateMethods","inject","code","innerHTML","render","async","PRIVATE","Date","getFullYear","cachedRequest","match","send","body","getReader","read","then","value","TextDecoder","decode","registerListener","responseText","status","statusText","matched","put","Response","headers","Content-Type","registerListeners","attribute.change","evt","attribute","oldValue","newValue","detail","observedAttributes","customElements","define"],"mappings":"mrBAAA,MAAMA,UAA0BC,kBAAkBC,cAChDC,cACEC,MAAM,qQAENC,KAAKC,IAAM,IAAIC,eACfF,KAAKG,MAAQC,OAAOC,KAAK,gBAEzBL,KAAKM,KAAKC,iBAAiB,CACzBC,IAAK,CACHC,QAAS,QAIbT,KAAKM,KAAKI,qBAAqB,CAC7BC,OAAQC,GAAQZ,KAAKa,UAAYD,EAEjCE,OAAQC,UACN,IAAKf,KAAKQ,IACR,OAAOR,KAAKgB,QAAQL,wNAEA,IAAIM,MAAOC,muCAejC,IAAIf,QAAcH,KAAKG,MACnBgB,QAAsBhB,EAAMiB,MAAMpB,KAAKQ,KAE3C,IAAKW,EAEH,OADAnB,KAAKC,IAAII,KAAK,MAAOL,KAAKQ,KACnBR,KAAKC,IAAIoB,OAGLF,EAAcG,KAAKC,YACzBC,OAAOC,KAAK,EAAGC,MAAAA,KAAY1B,KAAKgB,QAAQL,OAAO,IAAIgB,YAAY,SAASC,OAAOF,QAI1F1B,KAAKM,KAAKuB,iBAAiB7B,KAAKC,IAAK,OAAQc,MAAAA,IAC3C,IAAIe,aAAEA,EAAYC,OAAEA,EAAMC,WAAEA,GAAehC,KAAKC,IAEhD,GAAe,MAAX8B,EACF,OAGF,IAAI5B,QAAcH,KAAKG,MAEvBA,EAAMiB,MAAMpB,KAAKQ,KAAKiB,KAAKV,MAAAA,IACpBkB,SACG9B,EAAM+B,IAAIlC,KAAKQ,IAAK,IAAI2B,SAASL,EAAc,CACnDM,QAAS,CAAEC,eAAgB,oBAI/BrC,KAAKgB,QAAQL,OAAOmB,OAIxB9B,KAAKM,KAAKgC,kBAAkBtC,KAAM,CAChCuC,mBAAoBC,IAClB,IAAIC,UAAEA,EAASC,SAAEA,EAAQC,SAAEA,GAAaH,EAAII,OAE5C,GAAID,IAAaD,EAIjB,OAAQD,GACN,IAAK,MAAO,OAAOzC,KAAKgB,QAAQF,aAMxC+B,gCACE,MAAO,CAAC,eAIZC,eAAeC,OAAO,cAAepD"}